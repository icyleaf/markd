require "uri"

module Markd
  # Markdown rendering options.
  class Options
    # Render parsing cost time for reading the source, parsing blocks, and parsing inline.
    property? time : Bool

    # Enables GitHub Flavored Markdown support.
    #
    # https://github.github.com/gfm/
    property? gfm : Bool

    # Not supported for now.
    property? toc : Bool

    # If `true`:
    # - straight quotes will be made curly
    # - `--` will be changed to an en dash
    # - `---` will be changed to an em dash
    # - `...` will be changed to ellipses
    property? smart : Bool

    # If `true`, source position information for block-level elements
    # will be rendered in the `data-sourcepos` attribute (for HTML).
    property? source_pos : Bool

    # If `true`, raw HTML will not be passed through to HTML output
    # (it will be replaced by comments).
    property? safe : Bool

    # If `true`, code tags generated by code blocks will have a
    # prettyprint class added to them, to be used by
    # [Google code-prettify](https://github.com/google/code-prettify).
    property? prettyprint : Bool

    # If `base_url` is not `nil`, it is used to resolve URLs of relative
    # links. It act's like HTML's `<base href="base_url">` in the context
    # of a Markdown document.
    property base_url : URI?

    # Enables GFM emoji support.
    #
    # For example:
    #
    # ```
    # @octocat :+1: This PR looks great - it's ready to merge! :ship:
    # ```
    #
    # Becomes:
    #
    # ```
    # @octocat üëç This PR looks great - it's ready to merge! üö¢
    # ```
    # https://docs.github.com/en/get-started/writing-on-github/getting-started-with-writing-and-formatting-on-github/basic-writing-and-formatting-syntax#using-emojis
    property? emoji : Bool

    # If `true`, the following HTML tags will be filtered when rendering HTML output:
    #
    # * `<title>`
    # * `<textarea>`
    # * `<style>`
    # * `<xmp>`
    # * `<iframe>`
    # * `<noembed>`
    # * `<noframes>`
    # * `<script>`
    # * `<plaintext>`
    #
    # All other HTML tags are left untouched.
    property? tagfilter : Bool

    # If `true`, more autolinks will be detected.
    # Setting to `false` does not disable autolink support as a whole.
    property? autolink : Bool

    def initialize(
      @time = false,
      @gfm = false,
      @toc = false,
      @smart = false,
      @source_pos = false,
      @safe = false,
      @prettyprint = false,
      @emoji = false,
      @tagfilter = false,
      @autolink = false,
      @base_url = nil,
    )
    end

    # Deprecated

    @[Deprecated("Use `#time?` instead.")]
    getter time

    @[Deprecated("Use `#gfm?` instead.")]
    getter gfm

    @[Deprecated("Use `#smart?` instead.")]
    getter smart

    @[Deprecated("Use `#source_pos?` instead.")]
    getter source_pos

    @[Deprecated("Use `#safe?` instead.")]
    getter safe

    @[Deprecated("Use `#prettyprint?` instead.")]
    getter prettyprint
  end
end
